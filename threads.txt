Sometimes called lightweight processes

Differences btwn threads and processes?
    -share code section
    -data section
    -open files
    -signals

Similarities btwn threads and processes?
    -do not share program counter
    -do not share registers
    -do not share stack space

Why threads?
    -Thread creation is much faster than process creation 
        -Think about it. You don't have to copy data, or code
    -Context switching between threads is much faster
    -Communication between threads is faster

How to import thread functions?

    #include<pthread.h>

How to work with threads?
    -First, declare a variable of type p_thread
    -Give the address of that variable to pthread_create()
    -Also, pass the target function to pthread_create()
    -The p_thread variable is just a number used for identifying threads, it gets
    filled out by pthread_create

    pthread_t thread_id;
    pthread_create(thread_id, NULL, myfunction, NULL)

What does the second argument do?
    -If the second argument is NULL, then the default 'attributes' shall be used

What does the fourth argument do?
    -It's used for passing arguments to the target function

What does pthread_join() do?
    -It is equivalent to wait() for processes

What arguments does it take?
    -It takes a thread_id, and the calling thread waits for the thread with thread_id
    to finish

pthread_join(thread_id, NULL);

IMPORTANT
    -To compile a multithreaded program in c, we need to link our source file to the
    pthreads library

How do you do that?
    gcc multithread.c -lpthread

Is the -lpthread a typo?
No, the command really prepends l to the target library

How to share data between threads?
    -Global and static variables are stored in the data segment
    -All threads share data segment
    -Therefore all threads can access the same global and static variables

What is pthread_exit()?
    -Generally it's called when a thread is finished and is no longer required to exist.

What arguments to you pass to pthread_exit()?

    pthread_exit(NULL)

What happens if main() terminates before threads are finished executing?
    -If main() terminates with pthread_exit() then the other threads will continue executing
    -Otherwise, they will be automatically terminated
    
    pthread_exit(NULL)

